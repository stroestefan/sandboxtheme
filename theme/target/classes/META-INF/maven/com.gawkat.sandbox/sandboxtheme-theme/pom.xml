<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.gawkat.sandbox</groupId>
    <artifactId>sandboxtheme</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>sandboxtheme-theme</artifactId>
  <packaging>jar</packaging>
  <name>sandboxtheme Theme</name>
  <description>GXT Application Theme</description>

  <properties>
    <theme.gen.directory>${project.basedir}/target/generated-sources</theme.gen.directory>
    <phantomjs.version>2.1.1</phantomjs.version>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/java</directory>
      </resource>
      <!-- Theme config -->
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <!-- Theme file resources, icons -->
      <resource>
        <directory>src/main/files</directory>
      </resource>
    </resources>

    <plugins>
      <!-- Install phantomjs for the platoform for slicing the theme -->
      <plugin>
        <groupId>com.github.klieber</groupId>
        <artifactId>phantomjs-maven-plugin</artifactId>
        <version>0.7</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>install</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <version>${phantomjs.version}</version>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <!-- If you see an error in eclipse on this next line "An exception occurred while executing the Java class. null", 
            this indicates that there was a problem generating Neptune from the config file. Run from the command line to get the full 
            error, and on fixing it the error should go away, though a clean may also be required -->
          <execution>
            <id>generate-theme</id>
            <phase>process-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.sencha.gxt.themebuilder.ThemeBuilder</mainClass>
              <arguments>
                <argument>-gen</argument>
                <argument>${theme.gen.directory}</argument>
                <argument>-imageFile</argument>
                <argument>${project.build.directory}/snapshot.png</argument>
                <argument>-manifestFile</argument>
                <argument>${project.build.directory}/snapshot.json</argument>
                <argument>-out</argument>
                <argument>${project.build.directory}/${project.build.finalName}-generatedtheme.jar</argument>
                <argument>-imagePath</argument>
                <argument>${project.basedir}/src/main/files/icons</argument>
                <argument>-warDir</argument>
                <argument>${project.build.directory}/war</argument>
                <!-- Comment out slicedDisabled to disable -->
                <argument>-slicedDisabled</argument>
                <argument>false</argument>
                <argument>-sourcesOnly</argument>
                <argument>true</argument>
                <argument>-gwtXmlFilename</argument>
                <argument>BaseTheme.gwt.xml</argument>
                <argument>${project.basedir}/src/main/resources/tritium.theme</argument>
              </arguments>
              <systemProperties>
                <!-- PhantomBin is installed and set with the phantomjs-maven-plugin -->
                <systemProperty>
                  <key>phantomBin</key>
                  <value>${phantomjs.binary}</value>
                </systemProperty>
              </systemProperties>
              <includePluginDependencies>true</includePluginDependencies>
              <!-- Ignore themebuilder thread exception -->
              <cleanupDaemonThreads>false</cleanupDaemonThreads>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.sencha.gxt</groupId>
            <artifactId>gxt-themebuilder</artifactId>
            <version>${gxt.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Add teh target/theme-gen to be included as a sourcepath -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${theme.gen.directory}</source>
              </sources>
            </configuration>
          </execution>
          
          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${theme.gen.directory}</directory>
                  <includes>
                    <include>**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!-- Eclipse controls Maven execution directions -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <!-- Unpack phantomjs zip into target -->
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <!-- Run on workspace build -->
                      <runOnConfiguration>true</runOnConfiguration>
                    </execute>
                  </action>
                </pluginExecution>

                <!-- Theme build execution controls -->
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>java</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <!-- Remove ignore and add an execute to turn on m2e execution -->
                    <ignore />
                    <!-- https://wiki.eclipse.org/M2E_compatible_maven_plugins -->
                    <execute></execute>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <versionRange>[1.9.1,)</versionRange>
                    <goals>
                      <goal>add-source</goal>
                      <goal>add-resource</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <!-- run on maven update -->
                      <!-- <runOnConfiguration>true</runOnConfiguration> -->
                      <!-- run on workspace build -->
                      <runOnConfiguration>true</runOnConfiguration>
                      <runOnIncremental>true</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.github.klieber</groupId>
                    <artifactId>phantomjs-maven-plugin</artifactId>
                    <versionRange>[0.7,)</versionRange>
                    <goals>
                      <goal>install</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.sencha.gxt</groupId>
      <artifactId>gxt-themebuilder</artifactId>
      <version>${gxt.version}</version>
    </dependency>
  </dependencies>

</project>
